<?php
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class securitySubDao extends BaseDao
{
        public function searchCapabilities($searchMode="", $searchValue="", $culture="", $page=1, $orderField='c.sm_capability_id', $orderBy='ASC') {


            switch ($searchMode) {
                case "capability":
                    if ($culture == "en")
                        $feildName = "c.sm_capability_name";
                    else
                        $feildName="c.sm_capability_name_".$culture;
                    break;
            }

            $q = Doctrine_Query::create()
                            ->select('c.*')
                            ->from('capability c');
            if ($searchValue != "") {

                $q->where($feildName.' LIKE ?', '%' . trim($searchValue) . '%');
            }
            $q->orderBy($orderField . ' ' . $orderBy);


            // Number of records for a one page
            $sysConf=new sysConf();
        $resultsPerPage = $sysConf->getRowLimit()?$sysConf->getRowLimit():10;

            // Pager object
            $pagerLayout = new CommonhrmPager(
                            new Doctrine_Pager(
                                    $q,
                                    $page,
                                    $resultsPerPage
                            ),
                            new Doctrine_Pager_Range_Sliding(array(
                                'chunk' => 5
                            )),
                            "?page={%page_number}&mode=search&searchValue={$searchValue}&searchMode={$searchMode}&sort={$orderField}&order={$orderBy}"
            );

            $pager = $pagerLayout->getPager();
            $res = array();
            $res['data'] = $pager->execute();
            $res['pglay'] = $pagerLayout;

            return $res;

    }
    public function deleteCapability($id){
    $q = Doctrine_Query::create()
                                ->delete('capability')
                                ->where('sm_capability_id='.$id);

                $numDeleted = $q->execute();
                if ($numDeleted > 0) {
                    return true;
                }
                return false;
}
public function deleteAssignedCapability($employeeId){

         $q = Doctrine_Query::create()
                ->update('Users u')
                ->set('u.sm_capability_id', '?', array(null))
                ->where('u.emp_number =' . $employeeId);

        return $q->execute();

    }
    public function deleteAssignedPayRollCapability($employeeId){

         $q = Doctrine_Query::create()
                                ->delete('payprocessCapability c')
                                ->where("c.emp_number =?",$employeeId);
                                


                $numDeleted = $q->execute();
                if ($numDeleted > 0) {
                    return true;
                }
                return false;

    }

    
    public function getTableLockList($searchMode="", $searchValue="", $culture="", $page=1, $orderField='l.frmlock_form_name', $orderBy='ASC'){


          switch ($searchMode) {
                case "formName":

                        $feildName = "l.frmlock_form_name";

                    break;
                  case "moduleName":
                  if($culture=="en")
                        $feildName = "m.name";
                else
                        $feildName="m.module_name_".$culture;
                    break;


            }


            $q = Doctrine_Query::create()
                        ->select('*')
                        ->from('ConcurrencyControl c, c.FormLockDetails l')
                        ->where('c.con_table_name=l.con_table_name and c.con_activity_id=l.con_activity_id')
                        ->leftJoin('l.Module m on m.mod_id=l.mod_id');


            if ($searchValue != "") {

                $q->andwhere($feildName.' LIKE ?', '%' . trim($searchValue) . '%');
            }
            $q->orderBy($orderField . ' ' . $orderBy);


            // Number of records for a one page
             $sysConf=new sysConf();
            $resultsPerPage = $sysConf->getRowLimit()?$sysConf->getRowLimit():10;

            // Pager object
            $pagerLayout = new CommonhrmPager(
                            new Doctrine_Pager(
                                    $q,
                                    $page,
                                    $resultsPerPage
                            ),
                            new Doctrine_Pager_Range_Sliding(array(
                                'chunk' => 5
                            )),
                            "?page={%page_number}&mode=search&searchValue={$searchValue}&searchMode={$searchMode}&sort={$orderField}&order={$orderBy}"
            );

            $pager = $pagerLayout->getPager();
            $res = array();
            $res['data'] = $pager->execute();
            $res['pglay'] = $pagerLayout;

            return $res;


     }

      public function unlockRecords($tableName,$activityId){
          $q = Doctrine_Query::create()
                                ->delete('ConcurrencyControl c')
                                ->where("c.con_table_name='$tableName'")
                                ->andwhere("c.con_activity_id='$activityId'");


                $numDeleted = $q->execute();
                if ($numDeleted > 0) {
                    return true;
                }
                return false;
     }

        public function searchPayprocessCapabilityList($searchMode="", $searchValue="", $culture="", $page=1, $orderField='c.prl_disc_code', $orderBy='ASC') {


            switch ($searchMode) {
                case "employeename":
                    if ($culture == "en")
                        $feildName = "e.emp_display_name";
                    else
                        $feildName="e.emp_display_name_".$culture;
                    break;
               case "division":
                    if ($culture == "en")
                        $feildName = "p.title";
                    else
                        $feildName="p.title_".$culture;
                    break;     
            }

            $q = Doctrine_Query::create()
                            ->select('c.*')
                            ->from('payprocessCapability c')
                            ->innerJoin('c.Employee e on e.emp_number=c.emp_number')
                            ->leftJoin('c.CompanyStructure p on p.id=c.prl_disc_code');
            if ($searchValue != "") {

                $q->where($feildName.' LIKE ?', '%' . trim($searchValue) . '%');
            }
            $q->orderBy($orderField . ' ' . $orderBy);


            // Number of records for a one page
            $sysConf=new sysConf();
        $resultsPerPage = $sysConf->getRowLimit()?$sysConf->getRowLimit():10;

            // Pager object
            $pagerLayout = new CommonhrmPager(
                            new Doctrine_Pager(
                                    $q,
                                    $page,
                                    $resultsPerPage
                            ),
                            new Doctrine_Pager_Range_Sliding(array(
                                'chunk' => 5
                            )),
                            "?page={%page_number}&mode=search&searchValue={$searchValue}&searchMode={$searchMode}&sort={$orderField}&order={$orderBy}"
            );

            $pager = $pagerLayout->getPager();
            $res = array();
            $res['data'] = $pager->execute();
            $res['pglay'] = $pagerLayout;

            return $res;

    }


}

?>