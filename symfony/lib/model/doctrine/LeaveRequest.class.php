<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class LeaveRequest extends BaseLeaveRequest
{
	private $leave = null;
	private $leaveCount = null;
	private $numberOfDays = null;
	private $leaveDuration = null;
	private $statusCounter = array();
	private $canApprove = false;
	private $canCancel = false;
	private $workShiftHoursPerDay = null;

        const LEVAE_REQUEST_STATUS_APPROVED = 'Approved';
        const LEVAE_REQUEST_STATUS_CANCELLED = 'Cancelled';
        const LEVAE_REQUEST_STATUS_REJECTED = 'Rejected';

	public function getNumberOfDays() {
		$this->_fetchLeave();
		return number_format($this->numberOfDays, 2);
	}

	public function getLeaveDuration() {
	
	    if ($this->leaveCount == 1) {
	        $startTime = $this->leave[0]->getStartTime();
	        $endTime = $this->leave[0]->getEndTime();
	        
	        if ((!empty($startTime) && !empty($endTime)) && ("{$startTime} {$endTime}" != '00:00:00 00:00:00')) {
	            return "{$startTime} to {$endTime}";
	        } else {
	            $totalDuration = $this->leave[0]->getLeaveLengthHours();
	            if (!empty($totalDuration)) {
	                return number_format($totalDuration, 2) . ' hours';
	            } else {
	                return number_format($this->_getWorkShiftHoursPerDay(), 2) . ' hours';
	            }
	        }
	    } else {
	        return number_format($this->leaveDuration, 2) . ' hours';
	    }
	}

	public function getStatus() {
		$this->_fetchLeave();

		$statusStrings = array();
		foreach ($this->statusCounter as $status => $count) {
			$statusStrings[] = "{$status} ({$count})";
		}

		return implode(',<br />', $statusStrings);
	}

	public function getComments() {
		$this->_fetchLeave();
		if ($this->leaveCount > 0) {
			return $this->leave->getFirst()->getLeaveComments();
		}
		return '';
	}

	private function _fetchLeave() {
		if (is_null($this->leave)) {
			$leaveRequestDao = new LeaveRequestDao();
			$this->leave = $leaveRequestDao->fetchLeave($this->getLeaveRequestId());
			$this->_parseLeave();
		}
	}
	
	public function canApprove() {
		$this->_fetchLeave();
		return $this->canApprove;
	}
	
	public function canCancel() {
		$this->_fetchLeave();
		return $this->canCancel;
	}
	
	private function _parseLeave() {
		$this->numberOfDays = 0.0;
		$this->leaveDuration = 0.0;
		
		// Counting leave
		$this->leaveCount = $this->leave->count();
		
		$this->statusCounter = array();
		$this->canApprove = false;
		$this->canCancel = false;

		foreach ($this->leave as $leave) {
			// Calculating number of days and duration
			$dayLength = (float) $leave->getLeaveLengthDays();
			$hourLength = $dayLength * $this->_getWorkShiftHoursPerDay();

			if ($hourLength == 0.0) {
				$hourLength = (float) $leave->getLeaveLengthHours();
			}
			
			$this->leaveDuration += $hourLength;
			$this->numberOfDays += $dayLength;
			
			// Populating status counter
			$key = $leave->getTextLeaveStatus();
			$statusDayLength	=	($dayLength!=0)?$dayLength:1;
			if (array_key_exists($key, $this->statusCounter)) {
				$this->statusCounter[$key]+= $statusDayLength;
			} else {
				$this->statusCounter[$key] = $statusDayLength;
			}
			
			// Checking for available status changes
			if ($leave->canApprove()) {
				if($dayLength > 0)
					$this->canApprove = true;
			}
			
			if ($leave->canCancel()) {
				if($dayLength > 0)
					$this->canCancel = true;
			}
			
		}
		
		if ($this->numberOfDays == 1.0) {
		    $this->numberOfDays = $this->leave[0]->getLeaveLengthDays();
		}

	}
	
	private function _getWorkShiftHoursPerDay() {

		if (!isset($this->workShiftHoursPerDay)) {
			$employeeWorkshift = $this->getEmployee()->getEmployeeWorkShift();
			if($employeeWorkshift->count() > 0){
				$this->workShiftHoursPerDay = $employeeWorkshift[0]->getWorkShift()->getHoursPerDay();
			} else {
				$this->workShiftHoursPerDay = WorkShift::DEFAULT_WORK_SHIFT_LENGTH;
			}
		}
		
		return $this->workShiftHoursPerDay;
	}

}