<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasePayRollBankTransfer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_pr_bank_transfers');
        $this->hasColumn('emp_number', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('bank_code', 'string', 8, array(
             'type' => 'string',
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('bbranch_code', 'string', 6, array(
             'type' => 'string',
             'primary' => true,
             'length' => '6',
             ));
        $this->hasColumn('ebank_acc_no', 'string', 80, array(
             'type' => 'string',
             'primary' => true,
             'length' => '80',
             ));
        $this->hasColumn('ebt_start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => true,
             ));
        $this->hasColumn('ebt_end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'primary' => true,
             ));
        $this->hasColumn('ebt_amount', 'decimal', 15, array(
             'type' => 'decimal',
             'scale' => '2',
             'length' => '15',
             ));
        $this->hasColumn('ebank_acc_type_flg', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('ebt_cur_base_amount', 'decimal', 13, array(
             'type' => 'decimal',
             'scale' => '2',
             'length' => '13',
             ));
    }

    public function setUp()
    {
        $this->hasOne('PayRollBranch', array(
             'local' => 'bbranch_code',
             'foreign' => 'bbranch_code'));

        $this->hasOne('PayRollBank', array(
             'local' => 'bank_code',
             'foreign' => 'bank_code'));

        $this->hasOne('Employee', array(
             'local' => 'emp_number',
             'foreign' => 'emp_number'));
    }
}