<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasePayrollIncrement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_pr_increment');
        $this->hasColumn('emp_number', 'integer', 7, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '7',
             ));
        $this->hasColumn('inc_amount', 'decimal', 13, array(
             'type' => 'decimal',
             'scale' => '2',
             'length' => '13',
             ));
        $this->hasColumn('inc_previous_salary', 'decimal', 13, array(
             'type' => 'decimal',
             'scale' => '2',
             'length' => '13',
             ));
        $this->hasColumn('inc_new_salary', 'decimal', 13, array(
             'type' => 'decimal',
             'scale' => '2',
             'length' => '13',
             ));
        $this->hasColumn('app_approved', 'decimal', 1, array(
             'type' => 'decimal',
             'scale' => 0,
             'length' => '1',
             ));
        $this->hasColumn('inc_sal_grd_code', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             ));
        $this->hasColumn('wfmain_id', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             ));
        $this->hasColumn('inc_previous_point', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 0,
             'length' => '10',
             ));
        $this->hasColumn('wfmain_sequence', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 0,
             'length' => '10',
             ));
        $this->hasColumn('inc_new_point', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 0,
             'length' => '10',
             ));
        $this->hasColumn('inc_isprocessed', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             ));
        $this->hasColumn('inc_points_increased', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 0,
             'length' => '10',
             ));
        $this->hasColumn('wftype_code', 'decimal', 10, array(
             'type' => 'decimal',
             'scale' => 0,
             'length' => '10',
             ));
        $this->hasColumn('dbgroup_user_id', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('inc_previous_grade_code', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('inc_previous_slt_scale_year', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('inc_new_grade_code', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('inc_new_slt_scale_year', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '4',
             ));
        $this->hasColumn('inc_comment', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('inc_confirm_flag', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('inc_effective_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('inc_cancel_flag', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('inc_cancel_comment', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
    }

    public function setUp()
    {
        $this->hasOne('Grade as incPreviousGradeCode', array(
             'local' => 'inc_previous_grade_code',
             'foreign' => 'grade_code'));

        $this->hasOne('Grade as incNewGradeCode', array(
             'local' => 'inc_new_grade_code',
             'foreign' => 'grade_code'));

        $this->hasOne('GradeSlot as incNewSltScaleYear', array(
             'local' => 'inc_new_slt_scale_year',
             'foreign' => 'slt_id'));

        $this->hasOne('GradeSlot as incPreviousSltScaleYear', array(
             'local' => 'inc_previous_slt_scale_year',
             'foreign' => 'slt_id'));

        $this->hasOne('Employee', array(
             'local' => 'emp_number',
             'foreign' => 'emp_number'));
    }
}