<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseTrainAssign extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('hs_hr_td_assignlist');
        $this->hasColumn('emp_number', 'integer', 7, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '7',
             ));
        $this->hasColumn('td_course_id', 'integer', 7, array(
             'type' => 'integer',
             'primary' => true,
             'length' => '7',
             ));
        $this->hasColumn('td_asl_isattend', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('td_asl_isapproved', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('td_asl_ispending', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('td_asl_conductperson', 'string', 75, array(
             'type' => 'string',
             'length' => '75',
             ));
        $this->hasColumn('td_asl_duration', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('td_asl_conductdate', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('td_asl_remarks', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('td_asl_effectiveness', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('td_asl_adminremarks', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('td_asl_content', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('td_asl_isadcommented', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('td_asl_isempfb', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('td_asl_comment', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('td_asl_year', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('td_asl_admincomment', 'string', 200, array(
             'type' => 'string',
             'length' => '200',
             ));
        $this->hasColumn('td_asl_status', 'string', 1, array(
             'type' => 'string',
             'length' => '1',
             ));
        $this->hasColumn('wfmain_id', 'integer', 50, array(
             'type' => 'integer',
             'length' => '50',
             ));
        $this->hasColumn('wfmain_sequence', 'integer', 50, array(
             'type' => 'integer',
             'length' => '50',
             ));
        $this->hasColumn('app_emp_number', 'integer', 7, array(
             'type' => 'integer',
             'length' => '7',
             ));
        $this->hasColumn('app_position', 'string', 1, array(
             'type' => 'string',
             'length' => '1',
             ));
        $this->hasColumn('td_approval_type', 'string', 1, array(
             'type' => 'string',
             'length' => '1',
             ));
    }

    public function setUp()
    {
        $this->hasOne('Employee', array(
             'local' => 'emp_number',
             'foreign' => 'emp_number'));

        $this->hasOne('TrainingCourse', array(
             'local' => 'td_course_id',
             'foreign' => 'td_course_id'));

        $this->hasOne('WfMain', array(
             'local' => 'wfmain_id',
             'foreign' => 'wfmain_id'));

        $this->hasOne('Employee as AppEmployee', array(
             'local' => 'app_emp_number',
             'foreign' => 'emp_number'));
    }
}