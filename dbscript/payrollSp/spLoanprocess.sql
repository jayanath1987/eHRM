-- stored procedure definition script spprocessloans for mysql
-- generated by (c) ispirer sqlways express 5.0 build 901
-- timestamp: fri oct 21 11:43:32 2011

delimiter //

  
drop procedure if exists spprocessloans;
//
create procedure spprocessloans(start_date datetime,end_date datetime,empnumber varchar(6))
   
begin
   declare scurrency varchar(6);
   declare snatvecur varchar(6);

  -- update current installment  
   update hs_ln_schedule
   set     hs_ln_schedule.ln_sch_is_processed = 1,hs_ln_schedule.ln_sch_proc_from_date = start_date,
   hs_ln_schedule.ln_sch_proc_to_date = end_date   
   where   hs_ln_schedule.emp_number = empnumber and
   exists(select * from(select  hs_ln_schedule.emp_number,hs_ln_schedule.ln_hd_sequence,hs_ln_schedule.ln_ty_number,min(hs_ln_schedule.ln_sch_ins_no) ln_sch_ins_no
      from hs_ln_type, hs_ln_header, hs_ln_schedule
      where   hs_ln_type.ln_ty_number = hs_ln_header.ln_ty_number and
      coalesce(hs_ln_type.ln_ty_inactive_type_flg,0) = 1 and
      coalesce(hs_ln_header.ln_hd_is_active_flg,0) = 1  and
       coalesce(case hs_ln_header.ln_hd_inactive_period when -1 then 0 else hs_ln_header.ln_hd_inactive_period end,0) = 0  and
       coalesce(hs_ln_header.ln_hd_settled_flg,0) = 0  and     
       coalesce(hs_ln_header.ln_hd_bal_amount,0) > 0  and
       coalesce(hs_ln_schedule.ln_sch_is_processed,0) = 0  and
       coalesce(hs_ln_schedule.ln_st_number,0) = 0  and
	 
       hs_ln_header.ln_hd_apply_date <= end_date    and
       hs_ln_header.ln_hd_effective_date <= end_date   and
       hs_ln_header.ln_ty_number = hs_ln_schedule.ln_ty_number and
       hs_ln_header.emp_number = hs_ln_schedule.emp_number and
       hs_ln_header.ln_hd_sequence = hs_ln_schedule.ln_hd_sequence and
       hs_ln_schedule.emp_number = empnumber
      group by hs_ln_schedule.emp_number,hs_ln_schedule.ln_hd_sequence,hs_ln_schedule.ln_ty_number) res
   where
   hs_ln_schedule.emp_number = res.emp_number and
   hs_ln_schedule.ln_hd_sequence = res.ln_hd_sequence and
   hs_ln_schedule.ln_ty_number = res.ln_ty_number  and
   hs_ln_schedule.ln_sch_ins_no = res.ln_sch_ins_no);      
  
      
 -- loan balance amount and balance installment updation      
   update hs_ln_header
   set
   hs_ln_header.ln_hd_lst_proc_from_date = start_date,hs_ln_header.ln_hd_lst_proc_to_date = end_date,
   hs_ln_header.ln_hd_bal_installment = hs_ln_header.ln_hd_bal_installment -1,hs_ln_header.ln_hd_bal_amount = hs_ln_header.ln_hd_bal_amount -(select ln_sch_cap_amt
   from(select  hs_ln_schedule.emp_number,hs_ln_schedule.ln_hd_sequence,hs_ln_schedule.ln_ty_number,hs_ln_schedule.ln_sch_cap_amt
      from hs_ln_schedule
      where
      coalesce(hs_ln_schedule.ln_sch_is_processed,0) = 1 and
      hs_ln_schedule.ln_sch_proc_from_date = start_date and
      hs_ln_schedule.ln_sch_proc_to_date = end_date and
      hs_ln_schedule.emp_number = empnumber ) res
   where
   hs_ln_header.emp_number = res.emp_number and
   hs_ln_header.ln_hd_sequence = res.ln_hd_sequence and
   hs_ln_header.ln_ty_number = res.ln_ty_number)
   where exists(select  hs_ln_schedule.emp_number,hs_ln_schedule.ln_hd_sequence,hs_ln_schedule.ln_ty_number,hs_ln_schedule.ln_sch_cap_amt
   from hs_ln_schedule
   where
   coalesce(hs_ln_schedule.ln_sch_is_processed,0) = 1 and
   hs_ln_schedule.ln_sch_proc_from_date = start_date and
   hs_ln_schedule.ln_sch_proc_to_date = end_date and
   hs_ln_schedule.emp_number = empnumber and
   hs_ln_header.ln_ty_number = hs_ln_schedule.ln_ty_number and
   hs_ln_header.emp_number = hs_ln_schedule.emp_number and
   hs_ln_header.ln_hd_sequence = hs_ln_schedule.ln_hd_sequence);        
  
-- updating settle flag  
  
   update hs_ln_header
   set ln_hd_settled_flg = 3,ln_hd_is_active_flg = 0
   where emp_number = empnumber and
   coalesce(ln_hd_inactive_period,0) = 0 and coalesce(ln_hd_is_active_flg,0) = 1 and
   coalesce(ln_hd_bal_amount,0) = 0;      
       
 -- insert to processed loans      
       
   insert into hs_ln_processed_loan(emp_number,ln_hd_sequence,ln_sch_ins_no,ln_ty_number,
                                  ln_processed_from_date,ln_processed_to_date,
                ln_processed_capital,ln_processed_interest,ln_interest_rate,
				ln_bal_installment,ln_bal_amount)
   select s.emp_number,s.ln_hd_sequence,ln_sch_ins_no,s.ln_ty_number,
        start_date,end_date,ln_sch_cap_amt,ln_sch_inst_amount,ln_sch_inst_rate,
        ln_hd_bal_installment,
        ln_hd_bal_amount
   from hs_ln_header h,hs_ln_schedule s
   where	h.ln_hd_sequence = s.ln_hd_sequence and
   h.emp_number = s.emp_number and
   h.ln_ty_number = s.ln_ty_number and
   s.emp_number = empnumber and
   s.ln_sch_is_processed = 1 and
   s.ln_sch_proc_from_date = start_date  and
   s.ln_sch_proc_to_date = end_date
   union all
   select h.emp_number,h.ln_hd_sequence,1 ln_hd_installment,h.ln_ty_number,start_date from_date,end_date to_date,
		0 processed_capital,0 processed_interest,t.ln_ty_interest_rate,
        0 ln_bal_installment,0 ln_bal_amount
   from   hs_ln_type t,hs_ln_header h
   where coalesce(t.ln_ty_inactive_type_flg,0) = 1 and
   t.ln_ty_number = h.ln_ty_number and
   h.emp_number = empnumber  and ln_hd_inactive_period > 0;   
   
   
-- update inactive period  
  
 
   update hs_ln_header
   set ln_hd_inactive_period = coalesce(ln_hd_inactive_period,0) -1
   where emp_number = empnumber and coalesce(ln_hd_inactive_period,0) > 0 and
   exists(select * from(select h.emp_number,h.ln_hd_sequence,h.ln_ty_number
      from   hs_ln_type t,hs_ln_header h
      where coalesce(t.ln_ty_inactive_type_flg,0) = 1 and
      t.ln_ty_number = h.ln_ty_number and
      h.emp_number = empnumber) act_loan
   where hs_ln_header.emp_number = act_loan.emp_number and 
   hs_ln_header.ln_hd_sequence = act_loan.ln_hd_sequence and
   hs_ln_header.ln_ty_number = act_loan.ln_ty_number);

   update hs_ln_header
   set ln_hd_is_active_flg = 1
   where emp_number = empnumber and ln_hd_inactive_period=0 and ln_hd_settled_flg!=1; 
   
   
end;
  
  

//

delimiter ;

