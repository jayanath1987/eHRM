-- stored procedure definition script spinitaliseemployeepaydetails for mysql
-- generated by (c) ispirer sqlways express 5.0 build 901
-- timestamp: fri oct 21 11:43:32 2011

delimiter //

drop procedure if exists spinitaliseemployeepaydetails;
//
create procedure spinitaliseemployeepaydetails(start_date datetime,          
end_date datetime,          
empnumber varchar(6))
  
begin
   -- do we have tax?	
   -- delete from hs_pr_processedtaxes    where emp_number = empnumber and  txp_startdate  = start_date and  txp_enddate = end_date and timestampdiff(sql_tsi_day, localtimestamp,str_to_date(concat(1915+96, ':', '11', '.', '20'), '%y:%m.%d')) >= 0;          
   -- delete from hs_pr_txn_exception  where emp_number = empnumber and trn_startdate = start_date and  trn_enddate = end_date ;


 delete from
  hs_pr_exceptions
   where
  
   pro_startdate = start_date and
   pro_enddate = end_date and
   emp_number = empnumber;

 delete from
   hs_pr_processedemp
   where
   pro_payfrequency = 1 and
   pro_startdate = start_date and
   pro_enddate = end_date and
   emp_number = empnumber;            
   delete from hs_pr_processedtxn  where emp_number = empnumber and trn_startdate = start_date and  trn_enddate = end_date ;         
    delete from hs_pr_bank_transfers where emp_number = empnumber and ebt_start_date = start_date and ebt_end_date = end_date;         
   delete from hs_pr_payprocess where emp_number = empnumber  and pay_startdate = start_date and pay_enddate = end_date ;      
   
   -- we dont have this in design we migth be want this 
   -- delete from hs_pr_pay_value  where emp_number = empnumber  and pay_st_date = start_date and pay_end_date = end_date and date_format(localtimestamp(),'%yupdate %c update%d') < concat(date_format(str_to_date(concat(month('2064-11-6'), '\\', 23-3, '[', 2030-19), '%m\\%d[%y'),'%y'),'update ',month(str_to_date(concat(11+0, '(', 1915+96, '/', 11+9), '%m(%y/%d')),' update',lpad(day(str_to_date(concat(79+1932, '.', 1+10, '/', 34-14), '%y.%m/%d')),2,0));       

      
-- initialize loans          
      
-- increase inactive period 
   
   update  hs_ln_header
   set ln_hd_inactive_period = ln_hd_inactive_period+1
   where emp_number = empnumber and exists(select * from(select p.emp_number,p.ln_hd_sequence,p.ln_ty_number,ln_processed_from_date
      from   hs_ln_header h,hs_ln_processed_loan p
      where	h.ln_ty_number = p.ln_ty_number and
      h.emp_number = p.emp_number and
      h.ln_hd_sequence = p.ln_hd_sequence and p.emp_number = empnumber and
      p.ln_processed_from_date = start_date and p.ln_processed_to_date = end_date and
      coalesce(p.ln_processed_capital,0)+coalesce(p.ln_processed_interest,0) = 0) act_loan
   where hs_ln_header.emp_number = act_loan.emp_number and
   hs_ln_header.ln_hd_sequence = act_loan.ln_hd_sequence and
   hs_ln_header.ln_ty_number = act_loan.ln_ty_number) ;


-- update inactive flag to active state of processed completed loans 
   update hs_ln_header
   set ln_hd_is_active_flg = 1,ln_hd_settled_flg = 0
   where emp_number = empnumber and exists(select * from(select p.emp_number,p.ln_hd_sequence,p.ln_ty_number,ln_processed_from_date
      from	hs_ln_header h,hs_ln_processed_loan p
      where	h.ln_ty_number = p.ln_ty_number and
      h.emp_number = p.emp_number and
      h.ln_hd_sequence = p.ln_hd_sequence and p.emp_number = empnumber and coalesce(h.ln_hd_bal_amount,0) = 0  
	  and  p.ln_processed_from_date = start_date and p.ln_processed_to_date = end_date) act_loan
   where hs_ln_header.emp_number = act_loan.emp_number and
   hs_ln_header.ln_hd_sequence = act_loan.ln_hd_sequence and
   hs_ln_header.ln_ty_number = act_loan.ln_ty_number);

-- updating`` balance amount if it was processed       
   
   update hs_ln_header, hs_ln_schedule
   set  hs_ln_header.ln_hd_bal_amount =  ln_hd_bal_amount+ln_sch_cap_amt,hs_ln_header.ln_hd_bal_installment = ln_hd_bal_installment+1
   where hs_ln_header.ln_ty_number = hs_ln_schedule.ln_ty_number and
   hs_ln_header.ln_hd_sequence = hs_ln_schedule.ln_hd_sequence and
   hs_ln_header.emp_number = hs_ln_schedule.emp_number and
   ln_sch_proc_from_date =  start_date and
   ln_sch_proc_to_date = end_date and
   hs_ln_header.emp_number = empnumber;    


-- delete the processed installment for the processed period
   delete from hs_ln_processed_loan where emp_number = empnumber  and ln_processed_from_date = start_date and ln_processed_to_date = end_date;    
    
-- updating monthly installment    
      

   update  hs_ln_schedule
   set ln_sch_is_processed = 0,ln_sch_proc_from_date = null,ln_sch_proc_to_date = null
   where   emp_number = empnumber and
   ln_sch_is_processed = 1 and
   ln_sch_proc_from_date = start_date  and
   ln_sch_proc_to_date = end_date;
end;


//

delimiter ;

